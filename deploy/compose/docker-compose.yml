version: "3.9"

services:
  api:
    build:
      context: ../../
      dockerfile: backend/Dockerfile
    env_file: ["../../.env.dev"]
    ports: ["8000:8000"]
    depends_on: [postgres, redis]
    volumes:
      - api_uploads:/data/uploads
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 3s
      retries: 10

  worker:
    build:
      context: ../../
      dockerfile: backend/Dockerfile
    env_file: ["../../.env.dev"]
    depends_on: [redis, postgres]
    command: ["celery","-A","app.celery_app.celery","worker","-Q","crawl","-O","fair","--concurrency=4"]

  beat:
    build:
      context: ../../
      dockerfile: backend/Dockerfile
    env_file: ["../../.env.dev"]
    depends_on: [redis]
    command: ["celery","-A","app.celery_app.celery","beat"]

  redis:
    image: redis:7
    ports: ["6379:6379"]

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: omni
      POSTGRES_PASSWORD: omni
      POSTGRES_DB: omni_dev
    ports: ["5432:5432"]
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:
  pg_data: {}
  api_uploads: {}
